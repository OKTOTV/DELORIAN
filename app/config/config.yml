imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    #trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
        cookie_lifetime: 86400 #1 day
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
        - 'BprsStyleBundle:Form:fields.html.twig'
    globals:
        name:         "DELORIAN"
        version:      "Beta 2.0 (Now with Symfony 3.4)"
        junksize:     "%bprs_asset.junksize%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    filters:
        cssrewrite: ~

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: delorian
        connections:
            flow:
                driver:   "%database_driver%"
                host:     "%database_host%"
                port:     "%database_port%"
                dbname:   "%database_name%"
                user:     "%database_user%"
                password: "%database_password%"
                charset:  utf8
            delorian: "%delorian_db%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        default_entity_manager: delorian
        entity_managers:
            flow:
                connection: flow
                mappings:
                    OktolabDelorianBundle: ~
            delorian:
                connection: delorian
                mappings:
                    OktolabMediaBundle: ~
                    OktoMediaBundle: ~
                    BprsAssetBundle: ~
                    BprsAppLinkBundle: ~
                    AppBundle: ~
                    BprsUserBundle: ~
                    BprsLogbookBundle: ~
        resolve_target_entities:
            Bprs\AssetBundle\Entity\AssetInterface:         AppBundle\Entity\Asset
            Oktolab\MediaBundle\Entity\EpisodeInterface:    AppBundle\Entity\Episode
            Oktolab\MediaBundle\Entity\SeriesInterface:     AppBundle\Entity\Series
            Oktolab\MediaBundle\Entity\PlaylistInterface:   AppBundle\Entity\Playlist
            Oktolab\MediaBundle\Entity\StreamInterface:     Okto\MediaBundle\Entity\Stream
            Okto\MediaBundle\Entity\TagInterface:           AppBundle\Entity\Tag
            Bprs\UserBundle\Entity\UserInterface:           AppBundle\Entity\User

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

services:
    jms_serializer.object_constructor:
        alias: jms_serializer.doctrine_object_constructor
        public: false

jms_serializer:
    metadata:
        auto_detection: false
    visitors:
        json:
            options: JSON_HEX_QUOT
    object_constructors:
        doctrine:
            fallback_strategy: "fallback"

oktolab_media:
    episode_class:  "AppBundle\\Entity\\Episode"
    series_class:   "AppBundle\\Entity\\Series"
    asset_class:    "AppBundle\\Entity\\Asset"
    stream_class:   "Okto\\MediaBundle\\Entity\\Stream"
    encoding_filesystem: "cache"
    player_url:   "%player_url%"
    serializing_schema: "okto"
    worker_queue: "%worker_queue%"
    resolutions: "%oktolab_media_resolutions%"
    origin: "%oktolab_origin_config%"
    streamservers:
        server_1:
            player_url: "" # this would be the cloudfront public adress
            rtmp_url:    ""
            rtmp_control: ""         # this would be a nginx rtmp server at okto or in the cloud

okto_media:
    tag_class: "AppBundle\\Entity\\Tag"

bprs_command_line:
    php_path: "%php_path%"
    worker_queue: "%worker_queue%"
    redis_backend: "%redis_backend%"

bprs_asset:
    class:  "AppBundle\\Entity\\Asset"
    filesystem_map: oneup_flysystem.mount_manager
    worker_queue: "%worker_queue%"
    thumb_filesystem: posterframe
    404: "%bprs_asset_404%"
    adapters: "%bprs_asset_adapters%"

oneup_flysystem:
    adapters:
        posterframe:
            local:
                directory: "%kernel.root_dir%/../web/uploads/posterframes"
        video:
            local:
                directory: "%kernel.root_dir%/../web/uploads/videos"
        cache:
            local:
                directory: "%kernel.root_dir%/../web/uploads/cache"
        archive:
            local:
                directory: /Volumes/Sendungsarchiv/lta

    filesystems:
        posterframe:
            adapter: posterframe
            mount: posterframe
        video:
            adapter: video
            mount: video
        cache:
            adapter: cache
            mount: cache
        # archive:
        #     adapter: archive
        #     mount:  archive

oneup_uploader:
    chunks:
        maxage: 86400
        storage:
            directory: "%kernel.cache_dir%/uploader/chunks"
    mappings:
        posterframe:
            frontend: blueimp
            storage:
                type: flysystem
                filesystem: oneup_flysystem.posterframe_filesystem
        video:
            frontend: blueimp
            storage:
                type: flysystem
                filesystem: oneup_flysystem.video_filesystem
        cache:
            frontend: blueimp
            storage:
                type: flysystem
                filesystem: oneup_flysystem.cache_filesystem

knp_paginator:
    page_range: 5                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig   # sliding pagination controls template
        pagination: KnpPaginatorBundle:Pagination:twitter_bootstrap_v3_pagination.html.twig # sort link template

bprs_user:
    class: "AppBundle\\Entity\\User"
    mail:
        commandline_host:   "%commandline_host%" #www.yourhost.com
        adress:             "%email_adress%" #yourbot@example.com
        name:               "%bot_name%" #yourbot
    permissions:
        - ROLE_ADMIN
        - ROLE_USER
        - ROLE_BPRS_APPLINK_BACKEND
        - ROLE_BPRS_COMMANDLINE_BACKEND
        - ROLE_BPRS_USER_BACKEND
        - ROLE_BPRS_ASSET_READ
        - ROLE_BPRS_ASSET_WRITE
        - ROLE_BPRS_ASSET_DELETE
        - ROLE_OKTOLAB_MEDIA_READ
        - ROLE_OKTOLAB_MEDIA_WRITE
    user_defaults:
        - ROLE_USER

bprs_app_link:
    available_apis: [oktolab_media_api, bprs_asset_api]
